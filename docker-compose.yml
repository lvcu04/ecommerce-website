version: '3.8'

services:
  # 1. FRONTEND SERVICE (Next.js UI) - KHÔNG PHỤ THUỘC VÀO LB
  frontend:
    build:
      context: . 
      dockerfile: ./Dockerfile
    environment:
      - PORT=3000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: always

  # 2. LOAD BALANCER (Nginx - Cổng Public 80)
  lb:
    build: ./nginx_lb
    ports:
      - "80:80"
    # SỬA depends_on: chỉ chờ các service đã khởi tạo.
    # Việc này giúp Nginx có thể giải quyết DNS nội bộ.
    depends_on:
      - frontend 
      - backend-web1
      - backend-web2
      - backend-web3
    restart: always

  # 3. BACKEND MONOLITHIC - REPLICAS (PORT 3001)
  backend-web1:
    build: ./backend
    env_file:
      - ./.env.backend
    environment:
      - SERVER_ID=Web-Server-1
      - PORT=3001 
      - NODE_ENV=development 
    expose:
      - "3001"
    ports: # <--- ĐÃ THÊM: Ánh xạ cổng 5555 cho Prisma Studio
      - "5555:5555"
    volumes:
      - ./backend:/app
      - /app/node_modules 
    restart: always
    depends_on:
      db:
        condition: service_healthy # CHỜ DB SẴN SÀNG

  backend-web2:
    build: ./backend
    env_file:
      - ./.env.backend
    environment:
      - SERVER_ID=Web-Server-2
      - PORT=3001
      - NODE_ENV=development
    expose:
      - "3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: always
    depends_on:
      db:
        condition: service_healthy # CHỜ DB SẴN SÀNG

  backend-web3:
    build: ./backend
    env_file:
      - ./.env.backend
    environment:
      - SERVER_ID=Web-Server-3
      - PORT=3001
      - NODE_ENV=development
    expose:
      - "3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: always
    depends_on:
      db:
        condition: service_healthy # CHỜ DB SẴN SÀNG
        
  # 4. DATABASE SERVICE (PostgreSQL)
  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - ./.env.backend 
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    expose:
      - "5432"
    ports:
      - "5433:5432" # Cổng map ra host để truy cập từ bên ngoài (nếu cần)
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

# Khai báo Volume
volumes:
  postgres_data:
    driver: local