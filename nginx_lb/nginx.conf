# nginx_lb/nginx.conf (FINAL FIX: DNS Resolver + CORS Preflight)

# 1. FRONTEND UPSTREAM
upstream frontend_app {
    server frontend:3000; 
}

# 2. AUTH UPSTREAM (IP Hash)
upstream auth_servers {
    ip_hash;
    server backend-web1:3001; 
    server backend-web2:3001;
    server backend-web3:3001;
}

# 3. PRODUCT UPSTREAM (Least Connection)
upstream product_servers {
    least_conn; 
    server backend-web1:3001;
    server backend-web2:3001;
    server backend-web3:3001;
}

# 4. ORDER/CART UPSTREAM (Weighted RR)
upstream cart_order_servers {
    server backend-web1:3001 weight=5; 
    server backend-web2:3001 weight=3;
    server backend-web3:3001 weight=2;
}


server {
    listen 80;
    
    # üåü FIX FATAL ERROR: Th√™m Docker DNS Resolver ƒë·ªÉ gi·∫£i quy·∫øt t√™n host ƒë·ªông
    resolver 127.0.0.11 valid=30s; 

    # ƒê·ªãnh nghƒ©a origin c·ªßa Frontend (ƒêang ch·∫°y ·ªü 3000)
    set $cors_origin "http://localhost:3000"; 
    
    # ----------------------------------------------------
    # X·ª¨ L√ù CHUNG: OPTIONS PREFLIGHT v√† th√™m CORS Header cho Response
    # Kh·ªëi n√†y x·ª≠ l√Ω OPTIONS Request v√† tr·∫£ v·ªÅ 204 (No Content)
    location ~ ^/(auth|users|products|categories|upload|cart|orders) {
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            return 204;
        }
    }
    # ----------------------------------------------------


    # ROUTE 1: Auth & User (IP Hash)
    location ~ ^/(auth|users)/ {
        proxy_pass http://auth_servers; 
        proxy_set_header Host $host;
        # Th√™m header CORS cho Response
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    # ROUTE 2: Products, Categories, Upload (Least Connection)
    location ~ ^/(products|categories|upload)/ { 
        proxy_pass http://product_servers;
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    # ROUTE 3: Cart & Orders (Weighted RR)
    location ~ ^/(cart|orders)/ {
        proxy_pass http://cart_order_servers;
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    # ROUTE 4: Fallback cho Frontend (T·∫§T C·∫¢ c√°c URL kh√°c)
    location / {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}